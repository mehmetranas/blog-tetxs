Kullandığımız internet tarayıcılar hakkında ne kadar şey biliyoruz? Örneğin tarayıcılırn C++ ile yazıldığını biliyor muyuz? Ya da bir javascript motoru içerdiklerini biliyor muyuz? Haydi bu konu hakkında biraz konuşalım. 
Üstte de belirttiğim gibi tarayıcılıar bir javacript motoru içerirler. Örneğin yaygın olarak kullanlan 'Google Chrome' open source olan V8 motorunu kullanır, diğerleri de benzer motorlar kullanır. Ama bu motorlar biraz değiştirilmiştir. Yani Chorome'da kullanılan V8 motoruna yeni featurelar (özellikler) eklenmiştir. Böylece bir tarayıcı için daha efektif hale getirilmiştir. Tabi bu motorların da C++ ile yazıldığını söyleyelim.
Dilerseniz tarayıcıların bir HTML sayfasını nasıl render ettiğine bir bakalım. Varsayıyorum ki bir HTML dökümanını, yapılan bir request ile tarayıcıya gönderdik. Tarayıcı gelen dökümanı bir text olarak alacaktır. Head bilgisine göre de bir şekle sokacaktır. Tabi bu bir HTML dökümanı olduğu için de bunu HTML olarak algılayacak ve çokça duytudğumuz DOM (Document Object Model) dökümanına evirecektir. DOM aslında bir ağaç yapısıdır. 'Child', 'Parent' ilişkisi vardır. Yani anlayacağınuız tarayıcı öncelikle bu DOM yapısını oluşturur. Sonra da 'script' tagi içerisindeki adrese bağlı olarak request ile beraber gelen .js dosyasını alıp, JS motoruna gönderir. JS motoru bu kodları koşar. Eğer kodlarda DOM yapısını manüpile eden bir satır varsa DOM yapısı değiştiriilir. Bu işlem bitince de web sayfası render edilir. Tabi eğer render işleminden sonra herhangi bir evente bağlı olrak tekrar DOM yapısı manipüle edilirse, DOM yapısı tekrar inşa edilip re-render işlemi gerçekşetirilir.
Bonus olarak da şunu iliştirelim.
Tarayıcıların DOM yapısını manüpile etmek için kullandığı javascript yapısına yeni özellikler ekleyerek daha esnek araçlar elde edebilir miyiz?
Örneğin DOM yapısında yapılmak istenen bir değişikliği tarayıcımız mevcut javascript motoru ile cevap vermeyip, bunun yerine başka bir JS kaynağından bu isteğe cevap verebilir mi? İşte bu sorunun cevabı olarak da karşımıza Angular gibi Frameworkler çıkıyor. Angular ve benzeri araçlar javascript-DOM ilişkisini daha efektif hale getirirler.
