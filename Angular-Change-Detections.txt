Change Detection (CD) çoğu frontend kütüphanelerinde farklı çözümlerle geliştirilmiş bir stratejidir. Temelde View kısmında yapılan bir değişiklikte sayfanın rerender edilmesi ilkesine dayanır. Angular daki uygulamasından biraz bahsedeceğim. Angular kütüphanesinde Change Detectionlar iki yöntemle kontrol edilir. Default ve OnPush startjileri. Default yönteminde View kısmındaki bind edilmiş bütün değişkenler takip edilerek yapılan değşiklik hızlıca farkedilir ve rerender gerçekleştirilir. Ajax, KeyDown ve Click gibi eventlerden sonra DoCheck metodu çağrılır ve değşiklier kontrol edilir. Tabi bir değişiklşik olup olmadığını kontrol etmek içinde oldState  ve newState gibi kavramların tutulması gerekir. Tabi burada value typelarda bir sorun oluşmuyor çünkü bunların değşikik yapılması zaten kopyalanmaları anlamına geliyor ki buda çok büyük bir yük oluşturmuyor. >ma çok büyük ölçekli uygulamalarda referans typlarda performans kaybı yaşanabiliyor çünkü bütün referans typların birer kopyasının tutulması gerekiyor yoksa aynı referans type üzerindeki değşiklik algılanamaz ve CD devreye girmez. Burda da OnPush stratejisi devreye giriyor. OnPush startejisi referans typlar için kopyalama yapmaz ve tabi olarak da ref typlardaki değşim CD yi çalıştırmaz.Bunun için de Immutable.js kütüphanesi kullanılarak ref typlar da immutable yapılıp yapılan değişiklerin farkedilmesi sağlanır. 
Use Augry Choroe Extension to see tree of componenet in angular Appc
