bilindiği gibi nodejs V( motoru ile çalışır. Bu motorun içine C++ diliyle yerleştirilmiş çeşitli featurelar ile çalışma mekanizması işler. V8 motoru aynı zamanda javascript kodlarını da compile eder. Javascript synchronize bir dildir. Soru şu senkronize bir dilde okunan bir kod satırı geç cevap verirse ne olur. Mesela internetiniz yavaş ve geç cevap alıyorsunuz. veya okumak istediğiniz dosyanın boyutu çok büyük ve bu da uzun sürüyor. Bu drumnda asenkron bir kurguya ihtiyaınız olacak yani javascript kodları ilerlerken diğer tarafta uzun süren request-response işleminin de devam etmesi, birilerinin bunu takip etmesi gerekiyor. İşte burada yardımımıza nodejs içerisindeki libuv kütüphanesi koşuyor. libnuv kabaca lowlevel iletişimi sağlayan kütüphane. anlayacağınız işletim sistemi ile event-request-response yönetimini yapıyor. şimdi gelin bu yönetim organizasyonuna bir bakalım. V8 motoru içerisinde bir javascirpt kodu ile serverden birşeyler istediğimizi farzedelim. haliyle bu dosya boyutuna bağlı olrak biraz zaman alacaktır. Aslınjda kısa bir zaman da alsa, javascriptin senkronize bir dil olduğunu unutmalaylım. javascript bu kodu okuduktan sonra yoluna devam edecektir. response geldi mi, gelmedimi pek umurunda olmayacaktır. bundan sonra libuv devreye girecek ve bu komutu işletim sistemine ki bundan sonra OS şeklimnde yazacağım, bir request gönderir. OS gerekli işlemi yaptıktan sonra bir event gönderir libuv ye. libuv içerisinde OS den gelen eventleri tutan bir queue yapısı vcardır. libuv bu kuyruğu sık sık kontroleder ve tamamlanmış görevleri listeden çıkartıp V8 motoruna callback fonksiyonu ile geri döner. burada bir event-loop oluşturulmuş olur aslında. OS den gelen eventler, libuv nin kutyruğu kontrol etmesi ve tamamlanömış eventleri çekip callback yapması.
callback yapıldıktan sonra V8 mptotru bu fonksiyonu sıradaki işlemler bittikten sonra çalıştırır çünkü hep dediğimiz gibi JS senkronize bir dildir. Günün sonunda senkronizze bir dil de nodejs içerisindeki libuv kütüphanesi ile asenkron bir döngü ve non-blocking bir sistem oluşturulmuş oldu. 
